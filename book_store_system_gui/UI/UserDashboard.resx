<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAIAAAAlC+aJAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfpAxsPMAoJ6NJ0AAAMZUlEQVRoQ+1Z91NbWZqdv3Nrd3+Z
        rZnZabc9GLBp29gmGCcw0cbkJFAgKQtJgLKQEAiEEDkZnHAb9ILe/b4rkLx13wPG40lIcre3q3zqlYqi
        QPec884939PV7z79xvG7L3/xW8N3Ad8a3wV8a3wX8M+R/dvrF8LXF/AvuP4SSr6mgM/JYSaTTKcPAd4D
        HGE6dZL5h39WOL6OgAtONHO6R8hskpv6cGw5PDa9PTK8PjIccMZ9zvlGWPpIhPTpF/9SIL6CgHMq2VdS
        yvPxyPb+yPb+eOLdkfXtkfk1bzrgDa+4sV1eu82pNrmhbTFyCJkM+yf5pVAUKkDhkM5k5jnOfvjReXjs
        VNi/SZpfc4Z9bnwvObbLDe9wui1Ou8mrNoSOBDe2KR0DC1XhGgoSoKxOM5nAMTfx4cj54Xji/bH17bH5
        9bHpgDPs82N73Mgup9vmtZucep0bXBP6V4W+FaF9SexaTh1KLE4FaihIANOQzYaOhYnDI+fhse3dR8vb
        Y9PrpHE/qX/Fje5yuh1Os8WrN/nBdU61yvclxO5loTMudMWF1gWxMyaJlGkoREL+ApRV18SU9f2xQzH+
        TdLwmhvf58b2kiO7vG5bUG/xg5v8wLrQtyr0JoTuZbEjLrbFxNZF8eVCqm42NbIOBd6DPAUoS/LpE9v7
        jxPvjmxy4o37/NgrbmSPJV67xWs2BdUG378u9K6K3QmxKy50LDH2LxbElmiqaS7VNCc+CEobR7SQIBUk
        YJFLGd4kLW84VjXMeE42ntdscuoNXiUb37MidCXEzrjQHhNeLorPF8TmebExkqqflerCUnVAGlomLIlf
        rnBZ5ClAGVX2d0nTa960z+tf8WN7vG6H124L6k1+aJ0fWBP6VlLdCbGTxSbVFku1LqSeR1NN86mGSOpZ
        mNSGyOOg9CggPfSnPhKat4Z8BCgrvSN0fJ8z7XP6veTorqDbFjSbvGw8388SL8qJZ4XzcjH1YiHVPC82
        zTHja8PSkxnpUVCq8Us1fnJrmkTfYt4pyl/AGge63aR+jxvZ4bQsNrx6nRtY41lsllnPdMqJb10QX0RT
        zXNiQ0SsD0u1IelxUHoYlKr9UpVXqvaSm07Jukk/fVKGW87IX8D8R2lomxvZ4bVb/NCmoFoXBlaF3hVm
        fGdc7IiJbYup58x4tl/rZ1N1Yal2hjwOkhq/VO0jlV5S4ZYqXFKJXdLG4dOn019bQOSDNLDJa7b4wQ2u
        n+1XsSchdJ0V5d8knsUmJD2ekR4FSI2fVHtJpYfcd5G7U6R8CoosOLjI9vGvKEBeaf5n0reWHNzg+9b4
        3hU5NktCx5KgFGVzVGycSzXMpp6dGS89DEgPfKTaQypd0v1pKJ/CW5Nw24lXTaiJ4TcQsJaE7tVk/5rY
        k0h1sdiwomxbFF9EWVE2zKWeycaz/fqZ8RUucm+KlE/iLSfetEOZHX8wwMRG/qMgLwHy6zvppCvBar4z
        zref79fncuIbImLdrPQkRB6dGQ9VXrjvJnddUD4Ft53wkwNvTtASG5bY6J/1uPz+5FcVoOAkk1Gvi22s
        KIWLolQmVG04dV6UqWqfVOWBz40vs8PNCSy14nUL/miEMhuVKHsyzYt/vgKUFIXeQuOC0LYoyPuVFSVL
        vFKUzHip2itVusl9F7D96oRbDiyzY6kNSyy0yEyLzPj7URyIsimWn/0FCJBfSfq0Y4klnhVlhE2op58X
        pYcV5b1pcmeKGf8TM56WWGmRhf7FlL5qpFf09I/69FuB5SfPOZy3gIvIJn5OPwqxrnx6VpRsuLL9Khtf
        Pk1uTyrGww0blFqZ8ddM9EcjXjPS/9Skx5fz7x8F+Qu4uA+OHazwQe0MeRRIPfBJVV6lKFnH33JCmQPK
        JqDUCtctUGTGq0a8YoBrRvpfmsxTFxvAX75pjihIwDmy+nV6y0Ue+KDSQ+65yd1pcmcSlKIsZftVMR6v
        GuiPevqDnv7H0EmVk6L8AT/v8CgoVEBWxqdP2cm99B0X3JKH651JuSjtWGJjVVNkpleN9EcDXtGn/zCa
        /m9dujNCs1m5Ogu9AQULUHB6muHFtGcd6nzkhgOu28h1GxbZWM9cM+EVA/5Jj/8zir8fPbluTD93kbUD
        JHii5Oeb3YHzdbPHQnptHxe36eoeXdoG2xJ56ScVk3DDhkUmuGbEIiO9YYYHduj0wHiIGEJSv5uofRDd
        odlsoZ/r8xSg2HZymj14j6s7kNjF+A4sbJG5dRKVr+AymVpAyxw1RMAUQWsE7BFiCcNogGj9ROMjKhd0
        2OnYDOVS6UI05CNAYU/Tme0DSOzACmOPjP2GFF4lwQTxxSXPErhjOL2IjijYImAKw/gMDAeI1kfUXlS5
        aN809k5hq422O+FNAR+LcxagrJJOZ7b2cXWXsV/axoVNiKxDiLEHfxzcMTK1CI4o2ubAPIvGEI4HcSQA
        Wh8Z8sCAi1HvdkKHA9rt0GzBZgt5e5TnfchZANuymczOAa7u4vIuLG0p7DG0ioEE+Bh7nFpQ2FOZPWXs
        /aj14pAH+l3YM0W7nNjhgJd2aLGSFjOpM0CDmSSlfEZyHgKyBx9weRsTO7i0hdENjKydee+Ng3uRTi1Q
        xzzaImgOU0OIjgVxOIAaHwyescdOJ7Y74OUEabGSJjPWG2mdESuHsXOanRHl+kyXgwDlnblUenkblndo
        TGY/uwYzKySQkLxx4oqBwt4aAXMYDTM4FoRhP2i8oPJAnwt6prDLiW12aLUx9o1meGbEp3p8NIaPxqBM
        he6E/GCXy3DIQQDTkMls7MPSNsS2ILoBs2sQWoHAMvHGyXQMJhfQLrM3hcEQgrEA6PysLlVu2se8B8be
        Ac9tpNnC2Neds38wApXDUK6BezrCibkF6bIClHdM8iexTVjagvl1mF0jzPtl4lki04s4GcWJObTI7PUz
        MBoEHSsconJD3zTtnsROB7TZ4YWNNFlIg4mxf6KHhzL7Ch3c1ZJyLbnWTYwzuR2xXFaAjOzWAS5s4PwG
        hlchyNhL5+wpYz8LxjAZnwG5cEDtgQE36ZuGnkna6cC2Cea9wr7WgE/G4eEYqR6BCi3e1cBtNZQN0uJ+
        rNBA+rOvc/4tchAANLO4SeY2ILwGwQTxn3vvvGAfumCPQx464MbeaeiehDP2Vsa+3oS1Bnw8Th+O0qoR
        rNDhXQ3eHsKyQbzRT0t78EoLbLzCyx8TXUqAkp+fk+nQKst9cIX44kQue5TrUmEP40EijyoY8uCAi/ay
        LcvK/qXC3kzqmffweBxrRmnVML2vxXLGnt5UYWk/FrdBaQv5U61kDcnHRJe7DTkI2H2X9i+zzvHFJTcr
        HMbeOgemWcK8lwtH6wVW9m7CvHdCuwNa5bpsNJNnRpTZk5pRqWoY7muhXENuDcFNFS0dgOI2UtwEpS3w
        Qx20GwnbBV/xDihIvKK+OEuOK8aec1jZz6FpFg3Mexj2o8ZLBz1ULnvomsQOB221sVHVaCZ1RniqR+Y9
        KxxyTwt31PDTELmhgpIBvN4uXW8ixc1Q0gJX6+GxCr5c+58jBwGxbeKOSe4YOa9Lap6l+hCOnpU9Drpp
        v4vKowra7bTVRpst0MDqEp6wuqQ1o7RSh/c0MvtBvKHCkn4o7qTXm6C4mV0lLfCXRqjokmj6sucUOQhY
        3MbJBZhe/KzsZxh7nZ9ovDDI6hJ6pqDTeVaXLdazupTLHh6MkArmPbnN2MONAWDsO7C4GRX2FwLudxF6
        /m3sv8WlBJwdxe2fTETQGUVrBE1hZGUfQJ0f1Iw99rHCIZ1OfGlX6lJqkB9yFO+rWeGwsr+tJjdl9sV/
        x764GUqfw5Vn0Dgif+VxGf9zEpAUTy2zYJ2j5jDVz6DMnqq9VOXG8+Rgm52+sCFLjgmeybmXk5Ou1NG7
        WritJmWMvZycDihpxpIW5rpylT5nm/iPT0mUnbZf9qjiUgIuNKy/pqMBHPajjnUlezDumQbWlXZos7Gu
        bDST+jPeUDNKKofhvgbL1ShnhpT0k6JeuNYNV1qlqw3kWgNcXFfr4c+18L+1YAmyg5ZL2p+DgAscJtPB
        NWqLUvMcNc6iPgxjM9JoAHQ+GPSRAa/U58LusxbCFw7SPIGNVmhgIwxYokbIEw15OCjWDEhVfVDZy67q
        fngyBL1Wur7PRtiXS/5L5CbgM1+yWfmuyK//+Dr/G+Xg4rMfshk5IZnTTPbkNHtyyn64eO/Le68gNwF/
        Jf4LIJPN4RnuAjkL+P+G7wK+Nb4L+Nb4LuBb4zcv4P8Am+7i/l1CnTQAAAAASUVORK5CYII=
</value>
  </data>
</root>